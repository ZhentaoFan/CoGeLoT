defaults:
  - _self_

experiment_root: ./storage/experiments/

datamodule:
  _target_: cogelot.data.vima_datamodule.VIMADataModule

  instance_preprocessor:
    _target_: cogelot.data.preprocess.InstancePreprocessor

    text_tokenizer:
      _target_: cogelot.modules.tokenizers.TextTokenizer
      pretrained_model: t5-base

    end_effector_tokenizer:
      _target_: cogelot.modules.tokenizers.EndEffectorTokenizer

    pose_action_tokenizer:
      _target_: cogelot.modules.tokenizers.PoseActionTokenizer
      n_discrete_x_bins: 50
      n_discrete_y_bins: 100
      n_discrete_z_bins: 50
      n_discrete_rotation_bins: 50

  batch_size: 16
  num_workers: 4
  num_validation_instances: 5000
  raw_data_dir: ./storage/data/raw/
  normalized_data_dir: ./storage/data/normalized/
  preprocessed_data_dir: ./storage/data/preprocessed/

model:
  _target_: cogelot.models.vima.VIMALightningModule

  vima_policy:
    _target_: vima.policy.vima_policy.VIMAPolicy
    embed_dim: 768
    xf_n_layers: 11
    sattn_n_heads: 24
    xattn_n_heads: 24

  optimizer_partial_fn:
    _target_: torch.optim.AdamW
    _partial_: true
    lr: 0.0001
    weight_decay: 0

  lr_scheduler_partial_fn:
    _target_: transformers.get_cosine_schedule_with_warmup
    _partial_: true
    num_warmup_steps: 7000
    num_training_steps: 24000

trainer:
  _target_: lightning.pytorch.trainer.Trainer

  max_steps: ${model.lr_scheduler_partial_fn.num_training_steps}

  gradient_clip_val: 1.0

  logger:
    - _target_: lightning.pytorch.loggers.CSVLogger
      save_dir: ./storage/logs/

    - _target_: lightning.pytorch.loggers.CometLogger
      api_key: ${oc.env:COMET_API_KEY}
      project_name: ${oc.env:COMET_PROJECT_NAME}
      workspace: ${oc.env:COMET_WORKSPACE}
      offline: true

  callbacks:
    - _target_: lightning.pytorch.callbacks.ModelCheckpoint
      dirpath: ./storage/models/
      save_last: true
      save_top_k: 1
      monitor: val_loss
      mode: min
      filename: "{epoch:02d}-{val_loss:.2f}"

    - _target_: lightning.pytorch.callbacks.RichModelSummary

    - _target_: lightning.pytorch.callbacks.RichProgressBar

    - _target_: lightning.pytorch.callbacks.DeviceStatsMonitor
